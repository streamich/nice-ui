version: 2

refs:
  container: &container
    docker:
      - image: chybie/node-aws-cli
    working_directory: ~/repo
  steps:
    - &Versions
      run:
        name: Versions
        command: |
          node -v && npm -v && yarn -v
          printenv
    - &Install
      run:
        name: Install Dependencies
        command: |
          yarn install --pure-lockfile
          npm i -g cross-ci commit-status ci-scripts
    - &Setup_Environment
      run:
        name: Setup Environment
        command: |
          echo 'export BUILD_VERSION=$(cross-ci printenv BUILD_VERSION)' >> $BASH_ENV
          echo 'export PROJECT_NAME=$(cross-ci printenv PROJECT_NAME)' >> $BASH_ENV
          echo 'export GH_STATUS_TOKEN=$(cross-ci printenv GITHUB_TOKEN)' >> $BASH_ENV
    - &Build
      run:
        name: Build
        command: yarn build
    - &Test
      run:
        name: Test
        command: yarn test
    - &Post_to_GitHub_Storybook_Artifacts_Link
      run:
        name: Post to GitHub Storybook Artifacts Link
        command: npx commit-status success "Storybook" $BUILD_VERSION "https://cirlcelic.com/"
    - &Post_to_Slack
      run:
        name: Post to Slack
        command: npx ci-scripts slack

jobs:
  all:
    <<: *container
    steps:
      - checkout
      - *Versions
      - *Install
      - *Setup_Environment
      - *Build
      - *Test
      - store_artifacts:
          path: ~/repo/storybook-static
      - *Post_to_GitHub_Storybook_Artifacts_Link
      - *Post_to_Slack

  master:
    <<: *container
    steps:
      - checkout
      - *Versions
      - *Install
      - *Setup_Environment
      - *Build
      - *Test
      - store_artifacts:
          path: ~/repo/storybook-static
      - *Post_to_GitHub_Storybook_Artifacts_Link
      - *Post_to_Slack
      - run:
          name: Setup GitHub
          command: |
            git config --global user.email "streamich@gmail.com"
            git config --global user.name "streamich"
            git remote rm origin
            git remote add origin https://${GITHUB_TOKEN}@github.com/streamich/nice-ui
      - run:
          name: Upload Storybook
          command: npx gh-pages -d storybook-static
      - run:
          name: Release
          command: npx release

  nightly:
    <<: *container
    steps:
      - checkout
      - *Versions
      - *Install
      - *Setup_Environment
      - *Build
      - *Test

workflows:
  version: 2
  all:
    jobs:
      - all:
          context: common-env-vars
          filters:
            branches:
              ignore:
                - master
                - gh-pages
  master:
    jobs:
      - master:
          context: common-env-vars
          filters:
            branches:
              only: master
  nightly:
    jobs:
      - nightly:
          context: common-env-vars
    triggers:
      - schedule:
          cron: '0 1 * * *'
          filters:
            branches:
              only: master
