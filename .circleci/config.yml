version: 2

refs:
  container: &container
    docker:
      - image: chybie/node-aws-cli
    working_directory: ~/repo
  gh-status: &gh-status
    name: Post status to GitHub
    command: |
      npx cross-ci :run \
          npx commit-status success Storybook "'\${BUILD_VERSION}'" "'https://d2myv4xsj7kapm.cloudfront.net/builds/\${PROJECT_NAME}/\${BUILD_VERSION}/storybook/index.html'"

jobs:
  all:
    <<: *container
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Versions
          command: node -v && npm -v && yarn -v
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build
          command: yarn ci:build
      - run:
          name: Test
          command: yarn test
      - run:
          name: Upload to S3
          command: yarn ci:upload-all
      - run:
          <<: *gh-status
      - run:
          name: Post to Slack
          command: yarn ci:slack
      - store_artifacts:
          path: ~/repo/storybook-static

  master:
    <<: *container
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Versions
          command: node -v && npm -v && yarn -v
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build
          command: yarn ci:build
      - run:
          name: Test
          command: yarn test
      - run:
          name: Upload to S3
          command: yarn ci:upload-master
      - run:
          <<: *gh-status
      - run:
          name: Post to Slack
          command: yarn ci:slack
      - run:
          name: Release
          command: npx semantic-release
      - store_artifacts:
          path: ~/repo/storybook-static

  nightly:
    <<: *container
    steps:
      - checkout
      - run:
          name: Versions
          command: node -v && npm -v && yarn -v
      - run:
          name: NPM Auth
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: Build
          command: yarn ci:build
      - run:
          name: Test
          command: yarn test
      - run:
          name: Post to Slack on SUCCESS
          command: npx ci slack --channel="dev-null"
      - run:
          name: Post to Slack on FAILURE
          command: npx ci slack --channel="dev" --text="@here `nice-ui` nightly build failed :scream:" --icon_emoji=tired_face
          when: on_fail

workflows:
  version: 2
  all:
    jobs:
      - all:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
  master:
    jobs:
      - master:
          filters:
            branches:
              only: master
  nightly:
    jobs:
      - nightly
    triggers:
      - schedule:
          cron: '0 1 * * *'
          filters:
            branches:
              only: master
