"use strict";(self.webpackChunknice_ui=self.webpackChunknice_ui||[]).push([[8478],{"./src/1-inline/Highlight/index.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/nano-theme/lib/index.js");const highlightToken=(text,token)=>{const lowercased=text.toLowerCase(),highlighted=[];let index=0;do{const curr=lowercased.indexOf(token,index);if(-1===curr){highlighted.push(text.slice(index));break}curr>index&&highlighted.push(text.slice(index,curr)),highlighted.push([text.slice(curr,curr+token.length)]),index=curr+token.length}while(index<text.length);return highlighted},highlightClass=(0,lib.rule)({bg:"rgba(235, 213, 52,.5)",fw:"bold",bdrad:"3px",pad:"1px 3px",mar:"-1px -3px"}),preserveSpaces=text=>{const leading=" "===text[0],trailing=" "===text[text.length-1];return leading||trailing?react.createElement(react.Fragment,null,leading?react.createElement(react.Fragment,null," "):null,react.createElement(react.Fragment,null,text.trim()),trailing?react.createElement(react.Fragment,null," "):null):text},Highlight=_ref=>{let{text,query}=_ref;const parts=react.useMemo((()=>{if(!query)return[text];let highlighted=((text,query)=>{let highlighted=[text];for(const q of query){if(!q)continue;const next=[];for(const h of highlighted)"string"==typeof h?next.push(...highlightToken(h,q)):next.push(h);highlighted=next}return highlighted})(text,query);return highlighted=1===highlighted.length&&"string"==typeof highlighted[0]?((text,token)=>{const lowercased=text.toLowerCase(),highlighted=[],length1=text.length,length2=token.length;if(!length1)return highlighted;if(!length2)return[text];let char=text[0];const isMatch=lowercased[0]===token[0];highlighted.push(isMatch?[char]:char);let x=1,y=isMatch?1:0,last=highlighted[0],cnt=isMatch?1:0;for(;x<length1&&y<length2;)char=text[x],lowercased[x]===token[y]?(cnt++,x++,y++,last instanceof Array?last[0]=last[0]+char:(last=[char],highlighted.push(last))):(x++,last instanceof Array?highlighted.push(last=char):(last+=char,highlighted[highlighted.length-1]=last));return cnt<2?[text]:(x<text.length&&highlighted.push(text.slice(x)),highlighted)})(text,query.join("")):(text=>{const length=text.length;if(length<2)return text;let last=text[0];const out=[last];for(let i=1;i<length;i++){const part=text[i],lastIsString="string"==typeof last,isString="string"==typeof part;lastIsString&&isString?out[out.length-1]=last+=part:lastIsString||isString?" "===last&&!isString&&out[out.length-2]&&out[out.length-2]instanceof Array?(last=[out[out.length-2][0]+" "+part[0]],out[out.length-2]=last,out.pop()):out.push(last=part):last[0]=last[0]+part[0]}return out})(highlighted),highlighted.map(((part,i)=>"string"==typeof part?preserveSpaces(part):react.createElement("span",{key:i,className:highlightClass},preserveSpaces(part[0]))))}),[text,query]);return react.createElement(react.Fragment,{},...parts)};try{Highlight.displayName="Highlight",Highlight.__docgenInfo={description:"",displayName:"Highlight",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},query:{defaultValue:null,description:"",name:"query",required:!1,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/1-inline/Highlight/index.tsx#Highlight"]={docgenInfo:Highlight.__docgenInfo,name:"Highlight",path:"src/1-inline/Highlight/index.tsx#Highlight"})}catch(__react_docgen_typescript_loader_error){}const index_stories={title:"1. Inline/Highlight",component:Highlight,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{}},Primary={args:{text:"this is some text, this text can have highlights",query:["text","have"]}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'this is some text, this text can have highlights',\n    query: ['text', 'have']\n  }\n}",...Primary.parameters?.docs?.source}}};const __namedExportsOrder=["Primary"]}}]);