"use strict";(self.webpackChunknice_ui=self.webpackChunknice_ui||[]).push([[9237],{"./src/markdown/block/Mathjax/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>block_Mathjax});var react=__webpack_require__("./node_modules/react/index.js"),react_namespaceObject=__webpack_require__.t(react,2),useAsync=__webpack_require__("./node_modules/react-use/lib/useAsync.js"),loadScript=__webpack_require__("./src/utils/loadScript.ts");let cache;const Mathjax_loadMathjax=()=>(cache||(cache=(0,loadScript.Q)("MathJax","https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg-full.js")),cache),{useRef,useEffect,memo}=react_namespaceObject,MathjaxDisplayEquation=memo((_ref=>{let{source}=_ref;const ref=useRef(null),{value:MathJax}=(0,useAsync.A)(Mathjax_loadMathjax);return useEffect((()=>{if(!MathJax||!MathJax.tex2svg)return;if(!ref.current)return;const div=ref.current,svg=MathJax.tex2svg(source,{display:!0}).children[0];for(;div.firstChild;)div.removeChild(div.firstChild);ref.current.appendChild(svg)}),[MathJax,(MathJax||{}).tex2svg,ref.current,source]),react.createElement("div",{ref,style:{textAlign:"center"}})})),Mathjax_MathjaxDisplayEquation=MathjaxDisplayEquation;try{MathjaxDisplayEquation.displayName="MathjaxDisplayEquation",MathjaxDisplayEquation.__docgenInfo={description:"",displayName:"MathjaxDisplayEquation",props:{source:{defaultValue:null,description:"",name:"source",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/markdown/block/Mathjax/MathjaxDisplayEquation.tsx#MathjaxDisplayEquation"]={docgenInfo:MathjaxDisplayEquation.__docgenInfo,name:"MathjaxDisplayEquation",path:"src/markdown/block/Mathjax/MathjaxDisplayEquation.tsx#MathjaxDisplayEquation"})}catch(__react_docgen_typescript_loader_error){}var MarkdownBlock=__webpack_require__("./src/markdown/util/MarkdownBlock.tsx");const Mathjax=_ref=>{let{idx,source}=_ref;return react.createElement(MarkdownBlock.Ay,{idx},react.createElement(Mathjax_MathjaxDisplayEquation,{source}))},block_Mathjax=Mathjax;try{Mathjax.displayName="Mathjax",Mathjax.__docgenInfo={description:"",displayName:"Mathjax",props:{idx:{defaultValue:null,description:"",name:"idx",required:!0,type:{name:"number"}},source:{defaultValue:null,description:"",name:"source",required:!0,type:{name:"string"}},onError:{defaultValue:null,description:"",name:"onError",required:!1,type:{name:"((error: unknown) => void)"}},renderLoading:{defaultValue:null,description:"",name:"renderLoading",required:!1,type:{name:"((props: IMarkdownBlockProps) => ReactNode)"}},renderError:{defaultValue:null,description:"",name:"renderError",required:!0,type:{name:"(props: IMarkdownBlockProps, error?: Error | undefined) => ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/markdown/block/Mathjax/index.tsx#Mathjax"]={docgenInfo:Mathjax.__docgenInfo,name:"Mathjax",path:"src/markdown/block/Mathjax/index.tsx#Mathjax"})}catch(__react_docgen_typescript_loader_error){}},"./src/utils/loadScript.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>loadGlobal,k:()=>loadScript});var thingies_lib_until__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/thingies/lib/until.js");const load=__webpack_require__("./node_modules/load-script/index.js"),loadScript=url=>new Promise(((resolve,reject)=>load(url,((err,script)=>err?reject(err):resolve(script))))),loadGlobal=(globalVarName,url)=>loadScript(url).then((()=>(0,thingies_lib_until__WEBPACK_IMPORTED_MODULE_0__.T)((()=>!!__webpack_require__.g[globalVarName])))).then((()=>__webpack_require__.g[globalVarName]))},"./node_modules/thingies/lib/tick.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.tick=void 0;exports.tick=(ms=1)=>new Promise((r=>setTimeout(r,ms)))},"./node_modules/thingies/lib/until.js":(__unused_webpack_module,exports,__webpack_require__)=>{exports.T=void 0;const tick_1=__webpack_require__("./node_modules/thingies/lib/tick.js");exports.T=async(check,pollInterval=1)=>{for(;;){if(await check())return;await(0,tick_1.tick)(pollInterval)}}}}]);